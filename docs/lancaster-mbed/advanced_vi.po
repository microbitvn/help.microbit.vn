msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-31 11:46+0200\n"
"PO-Revision-Date: 2016-11-22 15:19+0100\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.9\n"
"Last-Translator: Doãn Minh Đăng\n"
"Language-Team: \n"
"Language: vi\n"

#: advanced.md:1
msgid "# Advanced Features of the Runtime"
msgstr "# Tính năng nâng cao của bộ Runtime"

#: advanced.md:3
msgid "Under the surface, the micro:bit runtime is a highly configurable, modular and component based piece of software."
msgstr "Ở tầng dưới, micro:bit runtime là một phần mềm có khả năng tùy biến cao, có tính mô-đun và dựa trên các bộ phận."

#: advanced.md:5
msgid ""
"The `uBit` object is provided as a collection of the commonly used components, all gathered together in one place\n"
"to make it easier for novice users to access the functionality of the device. However, there is no obligation to\n"
"use the `uBit` abstraction. More advanced users may prefer to create and use only the parts of the runtime they\n"
"need."
msgstr ""
"Các đối tượng `uBit` được cung cấp như một bộ sưu tập của các thành phần thường được sử dụng, tất cả tập trung lại với nhau ở một nơi\n"
" giúp người dùng mới dễ truy cập vào các chức năng của thiết bị. Tuy nhiên, không bắt buộc phải\n"
" dùng `uBit` trừu tượng. Người dùng cao cấp hơn có thể thích tạo ra và chỉ sử dụng các bộ phận của runtime mà họ cần."

#: advanced.md:10
msgid ""
"This provides more control and often frees up more memory resource for the application program - but does so\n"
"at the expense of the user taking more responsibility and additional complexity in their programs."
msgstr ""
"Điều này cung cấp khả năng kiểm soát nhiều hơn và thường giải phóng nhiều tài nguyên bộ nhớ cho chương trình ứng dụng - nhưng làm như vậy \n"
" cũng có cái giá là người lập trình cần đảm nhận trách nhiệm và sự phức tạp lớn hơn trong chương trình của họ."

#: advanced.md:13
msgid "## Using Components Directly"
msgstr "## Sử dụng trực tiếp các thành phần"

#: advanced.md:15
msgid "Taking advantage of the modular structure of the micro:bit runtime is fairly straightforward."
msgstr "Tận dụng lợi thế của cấu trúc mô-đun của micro:bit runtime là khá đơn giản."

#: advanced.md:17
msgid ""
" - Firstly, create a program that does **not** create or initialise a uBit object.\n"
" - Include `MicroBit.h` (or if you prefer, just the header files of the components you want to use). Including `MicroBit.h` is however, simpler.\n"
" - Instead, create C++ object instances of the classes that you want to use **as global variables** in your program. Create as many components as you need. You are free to use any of the constructors in this documentation.\n"
" - Call functions on those instances to elicit the behaviour you need, using the name of your object instances instead of `uBit.*`"
msgstr ""
" - Thứ nhất, tạo ra một chương trình mà ** không ** tạo ra hoặc khởi tạo một đối tượng uBit.\n"
" - Thêm vào (include) `MicroBit.h` (hoặc nếu bạn thích, chỉ cần các tập tin tiêu đề của các thành phần bạn muốn sử dụng). Tuy nhiên, thêm vào `MicroBit.h` thì đơn giản hơn.\n"
" - Thay vào đó, tạo ra các đối tượng C++ là phiên bản (instance) của các lớp (class) mà bạn muốn sử dụng **như các biến toàn cục** trong chương trình của bạn. Tạo đủ các thành phần như bạn cần. Bạn có thể tự do sử dụng bất kỳ hàm khởi tạo (constructor) nào trong tài liệu này.\n"
" - Gọi các hàm trên các phiên bản đó để thực thi hành vi mà bạn cần, dùng tên của đối tượng phiên bản của bạn thay vì `uBit.*`"

#: advanced.md:22
msgid "For example, if you wanted to create a program that just used the LED matrix display driver, you might write a program like this:"
msgstr "Ví dụ, nếu bạn muốn tạo ra một chương trình chỉ sử dụng driver điều khiển màn hình LED ma trận, bạn có thể viết một chương trình như thế này:"

#: advanced.md:24
msgctxt "advanced.md:24"
msgid ""
"```cpp\n"
"#include \"MicroBit.h\""
msgstr ""
"```cpp\n"
"#include \"MicroBit.h\""

#: advanced.md:27
msgid "MicroBitDisplay display;"
msgstr "MicroBitDisplay display;"

#: advanced.md:29
msgid ""
"int main()\n"
"{\n"
"    while(1)\n"
"        display.scroll(\":)\");\n"
"}\n"
"```"
msgstr ""
"int main()\n"
"{\n"
"    while(1)\n"
"        display.scroll(\":)\");\n"
"}\n"
"```"

#: advanced.md:36
msgid "If you need other components, add them to your program in the same way."
msgstr "Nếu bạn cần các thành phần khác, thêm chúng vào chương trình của bạn với cùng cách đó."

#: advanced.md:38
msgid "If a component has a dependency on another component (e.g. in the example below, the accelerometer is dependent on an I2C bus), then this will be requested as a mandatory parameter in the constructor."
msgstr "Nếu một thành phần phụ thuộc vào một thành phần khác (như trong ví dụ dưới đây, gia tốc phụ thuộc vào một đường truyền I2C), thì cái này sẽ được yêu cầu là một tham số bắt buộc trong hàm khởi tạo."

#: advanced.md:40
msgid ""
"See the 'Constructor' section of the each components' API documentation for details and examples.\n"
"```cpp\n"
"#include \"MicroBit.h\""
msgstr ""
"Xem phần 'Constructor' của tài liệu API mỗi thành phần để biết chi tiết và ví dụ. \n"
"```cpp\n"
"#include \"MicroBit.h\""

#: advanced.md:44
msgid ""
"MicroBitI2C i2c = MicroBitI2C(I2C_SDA0, I2C_SCL0);\n"
"MicroBitAccelerometer accelerometer = MicroBitAccelerometer(i2c);\n"
"MicroBitDisplay display;"
msgstr ""
"MicroBitI2C i2c = MicroBitI2C(I2C_SDA0, I2C_SCL0);\n"
"MicroBitAccelerometer accelerometer = MicroBitAccelerometer(i2c);\n"
"MicroBitDisplay display;"

#: advanced.md:48
msgid ""
"int main()\n"
"{\n"
"    while(1)\n"
"        display.scroll(accelerometer.getX());\n"
"}\n"
"```"
msgstr ""
"int main()\n"
"{\n"
"    while(1)\n"
"        display.scroll(accelerometer.getX());\n"
"}\n"
"```"

#: advanced.md:55
msgid ""
"!!! warning\n"
"    micro:bit runtime components should **always** be brought up as global variables. They should **not** be created as local variables - either in your main method or anywhere else. The reason for this is the the runtime is a multi-threaded environment, and any variables created in stack memory (like local variables) may be paged out by the scheduler, and result in instability if they utilise interrupts or are accessed by other threads. So... don't do it!"
msgstr ""
"!!! warning \"Cảnh báo\" \n"
"  Các thành phần của micro:bit nên **luôn luôn** được đưa lên làm biến toàn cục. Chúng **không nên** được tạo ra ở dạng các biến địa phương - dù là trong hàm \"main\" ở bất cứ nơi nào khác. Lý do cho điều này là bộ runtime là một môi trường đa luồng, và bất kỳ biến nào được tạo ra trong bộ nhớ stack (như các biến địa phương) có thể bị đẩy ra bởi các trình đặt lịch (scheduler), và dẫn đến sự mất ổn định nếu chúng có sử dụng các ngắt hoặc được truy cập bởi các luồng khác. Vì vậy... đừng làm điều đó!"

#: advanced.md:59
msgid "## System Components"
msgstr "## Các thành phần hệ thống"

#: advanced.md:61
msgid "There are also system components that provide background services. Without the `uBit` object, these will not be created by default.  Examples include the fiber scheduler, message bus and heap allocator."
msgstr "Ngoài ra còn có các thành phần hệ thống cung cấp các dịch vụ nền. Nếu không có đối tượng `uBit`, những cái này sẽ không được tạo ra một cách mặc định. Ví dụ như trình đặt lịch fiber, bus truyền tin và heap cấp phát."

#: advanced.md:63
msgid "You are not required to initialise these components, but you should do so if you want to benefit from the functionality they provide. The following section describe how to do this."
msgstr "Bạn không cần phải khởi tạo các thành phần này, nhưng bạn nên làm như vậy nếu bạn muốn dùng chức năng chúng cung cấp. Phần sau đây mô tả làm thế nào để làm điều này."

#: advanced.md:65
msgid "## Initialising the Message Bus"
msgstr "## Khởi tạo kênh truyền thông điệp (Message Bus)"

#: advanced.md:67
msgid "The [`MicroBitMessageBus`](ubit/messageBus.md) allows events to be created and delivered to applications.  So if a [`MicroBitMessageBus`](ubit/messageBus.md) is not created, then all events in the micro:bit runtime will be quietly ignored."
msgstr "Các [`MicroBitMessageBus`](ubit/messageBus.md) cho phép các sự kiện được tạo ra và chuyển tới các ứng dụng. Vì vậy, nếu một [`MicroBitMessageBus`](ubit/messageBus.md) không được tạo ra, thì tất cả các sự kiện micro:bit runtime sẽ bị lặng lẽ bỏ qua."

#: advanced.md:69
msgid "To enable this functionality, simply create an instance of the [`MicroBitMessageBus`](ubit/messageBus.md) class. From that point onward in your program, you can raise and listen for events as described in the [`MicroBitMessageBus`](ubit/messageBus.md) documentation."
msgstr "Để kích hoạt chức năng này, bạn chỉ cần tạo một phiên bản của lớp [`MicroBitMessageBus`](ubit/messageBus.md). Từ thời điểm đó trở đi trong chương trình của bạn, bạn có thể tạo ra và lắng nghe các sự kiện như mô tả trong phần tài liệu [`MicroBitMessageBus`](ubit/messageBus.md)."

#: advanced.md:71
msgctxt "advanced.md:71"
msgid ""
"```cpp\n"
"#include \"MicroBit.h\""
msgstr ""
"```cpp\n"
"#include \"MicroBit.h\""

#: advanced.md:74
msgctxt "advanced.md:74"
msgid ""
"MicroBitMessageBus bus;\n"
"MicroBitButton buttonA(MICROBIT_PIN_BUTTON_A, MICROBIT_ID_BUTTON_A);\n"
"MicroBitDisplay display;"
msgstr ""
"MicroBitMessageBus bus;\n"
"MicroBitButton buttonA(MICROBIT_PIN_BUTTON_A, MICROBIT_ID_BUTTON_A);\n"
"MicroBitDisplay display;"

#: advanced.md:78
msgctxt "advanced.md:78"
msgid ""
"void onPressed(MicroBitEvent e)\n"
"{\n"
"    display.print(\"S\");    \n"
"}"
msgstr ""
"void onPressed(MicroBitEvent e)\n"
"{\n"
"    display.print(\"S\");    \n"
"}"

#: advanced.md:83
msgid ""
"int main()\n"
"{\n"
"    bus.listen(MICROBIT_ID_BUTTON_A, MICROBIT_BUTTON_EVT_CLICK, onPressed);"
msgstr ""
"int main()\n"
"{\n"
"    bus.listen(MICROBIT_ID_BUTTON_A, MICROBIT_BUTTON_EVT_CLICK, onPressed);"

#: advanced.md:87
msgid ""
"    while(1)\n"
"    {\n"
"    }\n"
"}\n"
"```"
msgstr ""
"    while(1)\n"
"    {\n"
"    }\n"
"}\n"
"```"

#: advanced.md:93
msgid ""
"!!! warning\n"
"    Running a MessageBus without the Fiber Scheduler will result in all event handlers being registered as MESSAGE_BUS_LISTENER_IMMEDIATE (see [`MicroBitMessageBus`](ubit/messageBus.md) for details). This means that your event handler will be executed in the context of the code that raised the event. This may include interrupt context, which may not be safe for all operations. It is recommend that you always run the MessageBus with the Fiber Scheduler in order to allow the event to be decoupled from interrupt context."
msgstr ""
"!!! warning \"Cảnh báo\"\n"
" Chạy một MessageBus mà không có trình đặt lịch Fiber sẽ làm cho tất cả các trình xử lý sự kiện được đăng ký là MESSAGE_BUS_LISTENER_IMMEDIATE (xem [`MicroBitMessageBus`](ubit/messageBus.md) để biết chi tiết). Điều này có nghĩa là xử lý sự kiện của bạn sẽ được thực hiện trong context của đoạn mã gây nên sự kiện này. Điều này có thể bao gồm context về ngắt (interrupt), mà có thể không an toàn cho tất cả các hoạt động. Lời khuyên là bạn luôn chạy MessageBus với trình đặt lịch Fiber để cho phép sự kiện để được tách rời khỏi context về ngắt."

#: advanced.md:96
msgid "## Initialising the Fiber Scheduler"
msgstr "## Khởi tạo trình đặt lịch Fiber"

#: advanced.md:98
msgid ""
"Often when using asynchronous events, it is also useful to run the fiber scheduler. Without a scheduler in operation, all event handlers (such as the one above) will be executed with the threading mode `MESSAGE_BUS_LISTENER_IMMEDIATE`, as\n"
"described on the [`MicroBitMessageBus`](ubit/messageBus.md) documentation."
msgstr ""
"Thông thường khi sử dụng các sự kiện không đồng bộ, dùng các trình đặt lịch Fiber cũng sẽ hữu ích. Nếu không có một trình xếp lịch đang hoạt động, tất cả các trình xử lý sự kiện (chẳng hạn như cái ở trên) sẽ được thực hiện với chế độ luồng `MESSAGE_BUS_LISTENER_IMMEDIATE`, \n"
" như mô tả trên tài liệu [`MicroBitMessageBus`](ubit/messageBus.md)."

#: advanced.md:101
msgid "Also, it is not really possible to transparently enter a power efficient sleep - as illustrated in the busy loop in the above example."
msgstr "Ngoài ra, không thực sự có thể chuyển gọn vào trạng thái ngủ để tiết kiệm năng lượng - như minh họa trong vòng lặp bận rộn trong ví dụ trên."

#: advanced.md:103
msgid "Initialising the fiber scheduler is simple, and is demonstrated in the following example."
msgstr "Khởi tạo trình đặt lịch fiber là đơn giản, và được thể hiện trong ví dụ sau đây."

#: advanced.md:105
msgid "From the moment the fiber scheduler is initialised, it is then possible to block the processor in a power efficient way and to operate threaded event handlers:"
msgstr "Từ thời điểm trình đặt lịch fiber được khởi tạo, sau đó nó có thể chặn bộ xử lý bằng một cách tiết kiệm năng lượng và điều hành các luồng xử lý sự kiện:"

#: advanced.md:107
msgid ""
"```c++\n"
"#include \"MicroBit.h\""
msgstr ""
"```c++\n"
"#include \"MicroBit.h\""

#: advanced.md:110
msgctxt "advanced.md:110"
msgid ""
"MicroBitMessageBus bus;\n"
"MicroBitButton buttonA(MICROBIT_PIN_BUTTON_A, MICROBIT_ID_BUTTON_A);\n"
"MicroBitDisplay display;"
msgstr ""
"MicroBitMessageBus bus;\n"
"MicroBitButton buttonA(MICROBIT_PIN_BUTTON_A, MICROBIT_ID_BUTTON_A);\n"
"MicroBitDisplay display;"

#: advanced.md:114
msgctxt "advanced.md:114"
msgid ""
"void onPressed(MicroBitEvent e)\n"
"{\n"
"    display.print(\"S\");    \n"
"}"
msgstr ""
"void onPressed(MicroBitEvent e)\n"
"{\n"
"    display.print(\"S\");    \n"
"}"

#: advanced.md:119
msgid ""
"int main()\n"
"{\n"
"    scheduler_init(bus);"
msgstr ""
"int main()\n"
"{\n"
"    scheduler_init(bus);"

#: advanced.md:123
msgid "    bus.listen(MICROBIT_ID_BUTTON_A, MICROBIT_BUTTON_EVT_CLICK, onPressed);"
msgstr "    bus.listen(MICROBIT_ID_BUTTON_A, MICROBIT_BUTTON_EVT_CLICK, onPressed);"

#: advanced.md:125
msgid ""
"    while(1)\n"
"        fiber_sleep(1000);\n"
"}\n"
"```"
msgstr ""
"    while(1)\n"
"        fiber_sleep(1000);\n"
"}\n"
"```"

#: advanced.md:130
msgid ""
"!!!note\n"
"    Function calls to `uBit.sleep()` must be replaced with the direct, equivalent calls to the scheduler using `fiber_sleep()`."
msgstr ""
"!!! note \"Lưu ý\"\n"
" Hàm gọi đến `uBit.sleep()` phải được thay thế bằng cách tương đương là gọi trực tiếp đến trình đặt lịch, sử dụng `fiber_sleep()`."

#: advanced.md:133
msgid "## Initialising the Heap Allocator"
msgstr "## Khởi tạo heap cấp phát"

#: advanced.md:135
msgid "The micro:bit runtime provides an optional, heap memory allocator. This is primarily to permit the use of **multiple** regions of memory to be used as heap memory space for your variables."
msgstr "Các micro:bit runtime cung cấp một trình cấp phát bộ nhớ heap tùy chọn. Điều này chủ yếu là để cho phép sử dụng **nhiều** vùng của bộ nhớ như là không gian bộ nhớ heap cho các biến của bạn."

#: advanced.md:137
msgid "The `uBit` initialisation function will automatically release any memory unused by the Bluetooth stack for general purpose use in this fashion (this typically provides an additional 1K of SRAM under Bluetooth enabled builds, and another 8K if Bluetooth is disabled)."
msgstr "Hàm khởi tạo `uBit` sẽ tự động giải phóng bộ nhớ nào không dùng bởi ngăn xếp Bluetooth để phục vụ mục đích dùng chung theo cách này (điều này thường cung cấp thêm 1K của SRAM trong các bản biên dịch có dùng Bluetooth, và 8K nếu Bluetooth bị vô hiệu hóa)."

#: advanced.md:139
msgid ""
"Should you wish to also reclaim memory in this way, you can do so as follows:\n"
"```c++\n"
"#include \"MicroBit.h\""
msgstr ""
"Nếu bạn muốn cũng lấy lại bộ nhớ theo cách này, bạn có thể làm như sau:\n"
"```c++\n"
"#include \"MicroBit.h\""

#: advanced.md:143
msgid ""
"int main()\n"
"{\n"
"    microbit_create_heap(MICROBIT_SD_GATT_TABLE_START + MICROBIT_SD_GATT_TABLE_SIZE, MICROBIT_SD_LIMIT);\n"
"}\n"
"```"
msgstr ""
"int main()\n"
"{\n"
"    microbit_create_heap(MICROBIT_SD_GATT_TABLE_START + MICROBIT_SD_GATT_TABLE_SIZE, MICROBIT_SD_LIMIT);\n"
"}\n"
"```"

#: advanced.md:149
msgid "## Compile Time Configuration Options"
msgstr "## Tùy chọn cấu hình vào thời điểm biên dịch"

#: advanced.md:151
msgid "In addition to the flexibility to initialise only the components that you need, the runtime also provides a central, compile time configuration file called `MicroBitConfig.h`."
msgstr "Ngoài sự linh hoạt để khởi tạo chỉ những thành phần mà bạn cần, bộ runtime cũng cung cấp ở trung tâm một tập tin cấu hình thời gian biên dịch, gọi là `MicroBitConfig.h`."

#: advanced.md:153
msgid "You can use this to reconfigure the default behaviour of the runtime."
msgstr "Bạn có thể sử dụng để cấu hình lại các hành vi mặc định của bộ runtime."

#: advanced.md:155
msgid "The default settings will provide a stable working environment, but advanced users may want to further tailor the behaviour."
msgstr "Các thiết lập mặc định sẽ cung cấp một môi trường làm việc ổn định, nhưng người dùng cao cấp có thể muốn chỉnh sửa thêm hành vi."

#: advanced.md:157
msgid "To tailor the behaviour, simply edit the `MicroBitConfig.h` file to change the settings, and then perform a clean rebuild."
msgstr "Để chỉnh hành vi, chỉ cần chỉnh sửa file `MicroBitConfig.h` để thay đổi các thiết lập, và sau đó biên dịch lại từ đầu (clean rebuild)."

#: advanced.md:159
msgid "### Compile Time Options with MicroBitConfig.h"
msgstr "### Tùy chọn vào thời điểm biên dịch với MicroBitConfig.h"

#: advanced.md:161
msgid "The following options are configurable at compile time through `MicroBitConfig.h`:"
msgstr "Các tùy chọn sau đây được cấu hình tại thời điểm biên dịch qua `MicroBitConfig.h`:"

#: advanced.md:163
msgid ""
"| Configuration option | Brief Description |\n"
"| ------------- |-------------|\n"
"| `MICROBIT_HEAP_ALLOCATOR` | Enables or disables the MicroBitHeapAllocator for `uBit` based builds. |\n"
"| `MICROBIT_HEAP_BLOCK_SIZE` | The Block size used by the heap allocator in bytes. |\n"
"| `MICROBIT_NESTED_HEAP_SIZE` | The proportion of SRAM available on the mbed heap to reserve for the micro:bit heap. |\n"
"| `MICROBIT_HEAP_REUSE_SD` | If set to '1', any unused areas of the Soft Device GATT table will be automatically reused as heap memory. |\n"
"| `MICROBIT_SD_GATT_TABLE_SIZE` | The amount of memory (bytes) to dedicate to the SoftDevice GATT table. |\n"
"| `SYSTEM_TICK_PERIOD_MS` | The default scheduling quantum |\n"
"| `EVENT_LISTENER_DEFAUT_FLAGS` | The default threading mode used when a `MicroBitMessageBus` listener is created. |\n"
"| `MESSAGE_BUS_LISTENER_MAX_QUEUE_DEPTH` | Maximum event queue depth. If a queue exceeds this depth, further events will be dropped. |\n"
"| `MICROBIT_SYSTEM_COMPONENTS` | The maximum size of the interrupt callback list. |\n"
"| `MICROBIT_IDLE_COMPONENTS` | The maximum size of the idle callback list. |\n"
"| `MICROBIT_BLE_ENABLED` | Enable/Disable Bluetooth during normal operation. If disabled, no Bluetooth communication is possible, but radio functionality is made possible, and an additional 8K of SRAM is released|\n"
"| `MICROBIT_BLE_PAIRING_MODE` | Enable/Disable Bluetooth pairing mode with A+B / reset at power up|\n"
"| `MICROBIT_BLE_PRIVATE_ADDRESSES` | Enable/Disable the use of private resolvable addresses. **This is known to be a feature that suffers compatibility issues with many Bluetooth central devices.** |\n"
"| `MICROBIT_BLE_OPEN` | Enable/Disable Bluetooth security entirely. Open Bluetooth links are not secure, but are highly useful during the development of Bluetooth services|\n"
"| `MICROBIT_BLE_SECURITY_LEVEL` | Define the default, global Bluetooth security requirements for MicroBit Bluetooth services|\n"
"| `MICROBIT_BLE_WHITELIST` | Enable/Disable the use of Bluetooth whitelisting.|\n"
"| `MICROBIT_BLE_ADVERTISING_TIMEOUT` | Define the period of time for which the Bluetooth stack will advertise (seconds).|\n"
"| `MICROBIT_BLE_DEFAULT_TX_POWER` | Defines default power level of the Bluetooth radio transmitter.|\n"
"| `MICROBIT_BLE_DFU_SERVICE` | Enable/Disable Bluetooth Service: MicroBitDFU. This allows over the air programming during normal operation.|\n"
"| `MICROBIT_BLE_EVENT_SERVICE` | Enable/Disable Bluetooth Service: MicroBitEventService. This allows routing of events from the micro:bit message bus over Bluetooth.|\n"
"| `MICROBIT_BLE_DEVICE_INFORMATION_SERVICE` | Enable/Disable Bluetooth Service: MicroBitDeviceInformationService. This enables the standard Bluetooth device information service.|\n"
"| `MICROBIT_BLE_EDDYSTONE_URL` | Enable/Disable Eddystone URL support. Enabling this enables you to broadcast a physical web url from the microbit |\n"
"| `USE_ACCEL_LSB` | Enable 10 bit sampling on the accelerometer. By default, a more efficient 8 bit sampling if used.|\n"
"| `MICROBIT_DISPLAY_TYPE` | Selects the default matrix configuration for the display driver.|\n"
"| `MICROBIT_DISPLAY_MINIMUM_BRIGHTNESS` | Selects the minimum permissible brightness level for the device.|\n"
"| `MICROBIT_DISPLAY_MAXIMUM_BRIGHTNESS` | Selects the maximum permissible brightness level for the device.|\n"
"| `MICROBIT_DISPLAY_DEFAULT_BRIGHTNESS` | Selects the default brightness level for the device.|\n"
"| `MICROBIT_DEFAULT_SCROLL_SPEED` | Selects the time taken to scroll a single pixel, in milliseconds.|\n"
"| `MICROBIT_DEFAULT_SCROLL_STRIDE` | Selects the number of pixels a scroll will move in each quantum.|\n"
"| `MICROBIT_DEFAULT_PRINT_SPEED` | Selects the time each character will be shown on the display during print operations, in milliseconds.|\n"
"| `MICROBIT_DEFAULT_SERIAL_MODE` | Configures the default serial mode used by serial read and send calls.|\n"
"| `MICROBIT_DEFAULT_PULLMODE` | Define the default mode in which the digital input pins are configured. Valid options are PullDown, PullUp and PullNone.|\n"
"| `MICROBIT_PANIC_HEAP_FULL` | Enable this to invoke a panic on out of memory conditions.|\n"
"| `MICROBIT_DBG` | Enable this to route debug messages through the USB serial interface.|\n"
"| `MICROBIT_HEAP_DBG` | Enable this to receive detailed diagnostic messages from the heap allocator via the USB serial interface.|\n"
"| `MICROBIT_DAL_VERSION` | Define the default version information of the runtime.|"
msgstr ""
"| Tùy chọn cấu hình | Mô tả tóm tắt | \n"
" | ------------- | ------------- | \n"
" | `MICROBIT_HEAP_ALLOCATOR` | Cho phép hoặc vô hiệu hóa các MicroBitHeapAllocator cho các bản biên dịch dựa trên `uBit`. | \n"
" | `MICROBIT_HEAP_BLOCK_SIZE` | Kích thước khối được sử dụng bởi bộ cấp phát heap theo số byte. | \n"
" | `MICROBIT_NESTED_HEAP_SIZE` | Tỷ lệ SRAM có sẵn trên mbed heap để dành cho micro:bit heap. | \n"
" | `MICROBIT_HEAP_REUSE_SD` | Nếu đặt là '1', bất kỳ khu vực chưa sử dụng nào của bảng Soft Device GATT sẽ được tự động tái sử dụng như là bộ nhớ heap. | \n"
" | `MICROBIT_SD_GATT_TABLE_SIZE` | Số lượng bộ nhớ (byte) để dành cho bảng Soft Device GATT. | \n"
" | `SYSTEM_TICK_PERIOD_MS` | Trình đặt lịch cơ sở mặc định | \n"
" | `EVENT_LISTENER_DEFAUT_FLAGS` | Chế độ luồng mặc định được sử dụng khi một trình lắng nghe `MicroBitMessageBus` được tạo ra. | \n"
" | `MESSAGE_BUS_LISTENER_MAX_QUEUE_DEPTH` | Độ sâu tối đa của hàng đợi sự kiện. Nếu một hàng đợi vượt quá độ sâu này, các sự kiện sau đó sẽ bị bỏ. | \n"
" | `MICROBIT_SYSTEM_COMPONENTS` | Kích thước tối đa của danh sách gọi lại ngắt. | \n"
" | `MICROBIT_IDLE_COMPONENTS` | Kích thước tối đa của danh sách gọi lại nhàn rỗi. | \n"
" | `MICROBIT_BLE_ENABLED` | Bật / Tắt Bluetooth trong khi hoạt động bình thường. Nếu bị vô hiệu, không thể giao tiếp Bluetooth, nhưng chức năng radio có thể được thực hiện, và có thêm 8K của SRAM được giải tỏa | \n"
" | `MICROBIT_BLE_PAIRING_MODE` | Bật / Tắt Bluetooth chế độ ghép nối với A+B / thiết lập lại khi mới cấp điện | \n"
" | `MICROBIT_BLE_PRIVATE_ADDRESSES` | Kích hoạt / Vô hiệu hóa việc sử dụng các địa chỉ riêng phân giải được. **Tính năng này được biết là gặp vấn đề tương thích với nhiều thiết bị trung tâm Bluetooth**. | \n"
" | `MICROBIT_BLE_OPEN` | Bật / Tắt việc bảo mật Bluetooth toàn diện. Mở liên kết Bluetooth là không an toàn, nhưng rất hữu ích trong việc phát triển các dịch vụ Bluetooth. | \n"
" | `MICROBIT_BLE_SECURITY_LEVEL` | Xác định các yêu cầu bảo mật toàn cục, mặc định cho các dịch vụ Bluetooth | \n"
" | `MICROBIT_BLE_WHITELIST` | Kích hoạt / Vô hiệu hóa việc sử dụng các danh sách trắng Bluetooth. | \n"
" | `MICROBIT_BLE_ADVERTISING_TIMEOUT` | Xác định khoảng thời gian mà các ngăn xếp Bluetooth sẽ quảng cáo (giây). | \n"
" | `MICROBIT_BLE_DEFAULT_TX_POWER` | Xác định mức năng lượng mặc định của bộ phát vô tuyến Bluetooth. | \n"
" | `MICROBIT_BLE_DFU_SERVICE` | Kích hoạt / Vô hiệu hoá dịch vụ Bluetooth: MicroBitDFU. Điều này cho phép các lập trình lại thiết bị trực tiếp (over the air) trong quá trình hoạt động bình thường. | \n"
" | `MICROBIT_BLE_EVENT_SERVICE` | Kích hoạt / Vô hiệu hoá dịch vụ Bluetooth: MicroBitEventService. Điều này cho phép chuyển các sự kiện từ bus thông điệp micro:bit qua Bluetooth. | \n"
" | `MICROBIT_BLE_DEVICE_INFORMATION_SERVICE` | Kích hoạt / Vô hiệu hoá dịch vụ Bluetooth: MicroBitDeviceInformationService. Dùng để bật các dịch vụ thông tin chuẩn của thiết bị Bluetooth. | \n"
" | `MICROBIT_BLE_EDDYSTONE_URL` | Kích hoạt / Vô hiệu hoá hỗ trợ URL Eddystone. Bật tính năng này cho phép bạn để phát sóng một url web vật lý từ micro:bit. | \n"
" | `USE_ACCEL_LSB` | Kích hoạt tính năng lấy mẫu 10 bit trên máy đo gia tốc. Chế độ mặc định sử dụng các lấy mẫu 8 bit tiết kiệm năng lượng hơn. | \n"
" | `MICROBIT_DISPLAY_TYPE` | Chọn cấu hình ma trận mặc định cho driver điều khiển hiển thị. | \n"
" | `MICROBIT_DISPLAY_MINIMUM_BRIGHTNESS` | Chọn mức độ sáng tối thiểu cho phép của thiết bị. | \n"
" | `MICROBIT_DISPLAY_MAXIMUM_BRIGHTNESS` | Chọn mức độ sáng tối đa cho phép của thiết bị. | \n"
" | `MICROBIT_DISPLAY_DEFAULT_BRIGHTNESS` | Chọn mức độ sáng mặc định cho thiết bị. | \n"
" | `MICROBIT_DEFAULT_SCROLL_SPEED` | Chọn thời gian dùng để cuộn một điểm ảnh duy nhất, trong mili giây. | \n"
" | `MICROBIT_DEFAULT_SCROLL_STRIDE` | Chọn số lượng điểm ảnh mà một cuộn sẽ di chuyển trong từng lượt. | \n"
" | `MICROBIT_DEFAULT_PRINT_SPEED` | Chọn thời gian mỗi ký tự sẽ được hiển thị trên màn hình trong các hoạt động in ra màn hình, trong mili giây. | \n"
" | `MICROBIT_DEFAULT_SERIAL_MODE` | Cấu hình mặc định chế độ giao tiếp nối tiếp (serial) được sử dụng bởi các lệnh đọc và ghi serial. | \n"
" | `MICROBIT_DEFAULT_PULLMODE` | Xác định chế độ mặc định để cấu hình các chân đầu vào kỹ thuật số. Các lựa chọn hợp lệ là PullDown, PullUp và PullNone. | \n"
" | `MICROBIT_PANIC_HEAP_FULL` | Kích hoạt tính năng này để tạo một báo động (panic) về những hoàn cảnh hết bộ nhớ. | \n"
" | `MICROBIT_DBG` | Kích hoạt tính năng này để chuyển thông điệp debug qua giao diện nối tiếp USB. | \n"
" | `MICROBIT_HEAP_DBG` | Kích hoạt tính năng này để nhận tin nhắn chẩn đoán chi tiết từ bộ cấp phát heap qua giao diện nối tiếp USB. | \n"
" | `MICROBIT_DAL_VERSION` | Xác định thông tin phiên bản mặc định của bộ runtime. |"

#: advanced.md:202
msgid "There are also some constants that define the geometry of the micro:bit memory"
msgstr "Ngoài ra còn có một số hằng số định nghĩa (kích thước) hình học của bộ nhớ micro:bit."

#: advanced.md:204
msgid ""
"!!! warning\n"
"    Only change these if you really know what you are doing!"
msgstr ""
"!!! warning \"Cảnh báo\" \n"
" Chỉ thay đổi những điều này nếu bạn thực sự biết mình đang làm gì!"

#: advanced.md:207
msgid ""
"| Configuration option | Brief Description |\n"
"| ------------- |-------------|\n"
"| `MICROBIT_SRAM_BASE` |  The start address of usable RAM memory. |\n"
"| `MICROBIT_SRAM_END` |  The end address of usable RAM memory. |\n"
"| `MICROBIT_SD_LIMIT` |  The end address of RAM memory reserved for Soft Device (Nordic's Bluetooth stack). |\n"
"| `MICROBIT_SD_GATT_TABLE_START` |  The start address of the Bluetooth GATT table in RAM. |\n"
"| `CORTEX_M0_STACK_BASE` | The memory address of the top of the system stack. |\n"
"| `MICROBIT_STACK_SIZE` | Amount of memory reserved for the stack (in bytes). |\n"
"| `MICROBIT_HEAP_END` | The end address of the mbed heap space |"
msgstr ""
"| Tùy chọn cấu hình | Mô tả tóm tắt | \n"
"| ------------- |-------------|\n"
"| `MICROBIT_SRAM_BASE` |  Địa chỉ bắt đầu của bộ nhớ RAM có thể sử dụng. |\n"
"| `MICROBIT_SRAM_END` |  Địa chỉ cuối của bộ nhớ RAM có thể sử dụng. |\n"
"| `MICROBIT_SD_LIMIT` |  Địa chỉ cuối của bộ nhớ RAM để dành cho Soft Device (Nordic's Bluetooth stack). |\n"
"| `MICROBIT_SD_GATT_TABLE_START` |  Địa chỉ bắt đầu của bảng Bluetooth GATT table trong RAM. |\n"
"| `CORTEX_M0_STACK_BASE` | Địa chỉ bộ nhớ ở trên cùng của stack hệ thống. |\n"
"| `MICROBIT_STACK_SIZE` | Lượng bộ nhớ để dành cho stack (tính theo byte). |\n"
"| `MICROBIT_HEAP_END` | Địa chỉ cuối cùng của không gian mbed heap. |"

#: advanced.md:217
msgid "### Compile Time Options with Yotta"
msgstr "### Tùy chọn tại thời điểm biên dịch với Yotta"

#: advanced.md:219
msgid ""
"Rather than edit the `MicroBitConfig.h` file to change the default behaviour of the runtime, if you are using\n"
"`yotta`, you can also provide a `config.json` in your project."
msgstr ""
"Thay vì chỉnh sửa file `MicroBitConfig.h` để thay đổi hành vi mặc định của bộ runtime, nếu bạn đang sử dụng\n"
" `yotta`, bạn cũng có thể cung cấp một `config.json` trong dự án của bạn."

#: advanced.md:222
msgid "Here's a `config.json`, using all available configuration options, that matches the default values specified in `MicroBitConfig.h`:"
msgstr "Dưới đây là một `config.json`, sử dụng tất cả các tùy chọn cấu hình có sẵn, phù hợp với các giá trị mặc định được quy định trong `MicroBitConfig.h`:"

#: advanced.md:224
msgid ""
"```json\n"
"{\n"
"    \"microbit-dal\":{\n"
"        \"bluetooth\":{\n"
"            \"enabled\": 1,\n"
"            \"pairing_mode\": 1,\n"
"            \"private_addressing\": 0,\n"
"            \"open\": 0,\n"
"            \"whitelist\": 1,\n"
"            \"advertising_timeout\": 0,\n"
"            \"tx_power\": 0,\n"
"            \"dfu_service\": 1,\n"
"            \"event_service\": 1,\n"
"            \"device_info_service\": 1,\n"
"            \"eddystone_url\": 0\n"
"        },\n"
"        \"reuse_sd\": 1,\n"
"        \"default_pullmode\":\"PullDown\",\n"
"        \"gatt_table_size\": \"0x300\",\n"
"        \"heap_allocator\": 1,\n"
"        \"nested_heap_proportion\": 0.75,\n"
"        \"system_tick_period\": 6,\n"
"        \"system_components\": 10,\n"
"        \"idle_components\": 6,\n"
"        \"use_accel_lsb\": 0,\n"
"        \"min_display_brightness\": 1,\n"
"        \"max_display_brightness\": 255,\n"
"        \"display_scroll_speed\": 120,\n"
"        \"display_scroll_stride\": -1,\n"
"        \"display_print_speed\": 400,\n"
"        \"panic_on_heap_full\": 1,\n"
"        \"debug\": 0,\n"
"        \"heap_debug\": 0,\n"
"        \"stack_size\":2048,\n"
"        \"sram_base\":\"0x20000008\",\n"
"        \"sram_end\":\"0x20004000\",\n"
"        \"sd_limit\":\"0x20002000\",\n"
"        \"gatt_table_start\":\"0x20001900\"\n"
"    }\n"
"}\n"
"```"
msgstr ""
"```json\n"
"{\n"
"    \"microbit-dal\":{\n"
"        \"bluetooth\":{\n"
"            \"enabled\": 1,\n"
"            \"pairing_mode\": 1,\n"
"            \"private_addressing\": 0,\n"
"            \"open\": 0,\n"
"            \"whitelist\": 1,\n"
"            \"advertising_timeout\": 0,\n"
"            \"tx_power\": 0,\n"
"            \"dfu_service\": 1,\n"
"            \"event_service\": 1,\n"
"            \"device_info_service\": 1,\n"
"            \"eddystone_url\": 0\n"
"        },\n"
"        \"reuse_sd\": 1,\n"
"        \"default_pullmode\":\"PullDown\",\n"
"        \"gatt_table_size\": \"0x300\",\n"
"        \"heap_allocator\": 1,\n"
"        \"nested_heap_proportion\": 0.75,\n"
"        \"system_tick_period\": 6,\n"
"        \"system_components\": 10,\n"
"        \"idle_components\": 6,\n"
"        \"use_accel_lsb\": 0,\n"
"        \"min_display_brightness\": 1,\n"
"        \"max_display_brightness\": 255,\n"
"        \"display_scroll_speed\": 120,\n"
"        \"display_scroll_stride\": -1,\n"
"        \"display_print_speed\": 400,\n"
"        \"panic_on_heap_full\": 1,\n"
"        \"debug\": 0,\n"
"        \"heap_debug\": 0,\n"
"        \"stack_size\":2048,\n"
"        \"sram_base\":\"0x20000008\",\n"
"        \"sram_end\":\"0x20004000\",\n"
"        \"sd_limit\":\"0x20002000\",\n"
"        \"gatt_table_start\":\"0x20001900\"\n"
"    }\n"
"}\n"
"```"

#: advanced.md:266
msgid ""
"It should be noted that **all** of the above options are optional, and will revert to their default values\n"
"if not specified. This means that we can also provide a subset of these options, to configure specific\n"
"parts of the runtime:"
msgstr ""
"Cần lưu ý rằng **tất cả** các tùy chọn ở trên là tùy chọn, và sẽ trở lại giá trị mặc định của chúng \n"
" nếu không được nhắc đến. Điều này có nghĩa rằng chúng ta cũng có thể cung cấp một tập hợp con của các tùy chọn này, để cấu hình\n"
" các phần cụ thể của bộ runtime:"

#: advanced.md:270
msgid ""
"```json\n"
"{\n"
"    \"microbit-dal\":{\n"
"        \"bluetooth\":{\n"
"            \"open\": 1\n"
"        },\n"
"        \"debug\":1\n"
"    }\n"
"}\n"
"```"
msgstr ""
"```json\n"
"{\n"
"    \"microbit-dal\":{\n"
"        \"bluetooth\":{\n"
"            \"open\": 1\n"
"        },\n"
"        \"debug\":1\n"
"    }\n"
"}\n"
"```"

#: advanced.md:281
msgid ""
"Additionally, the options provided through `config.json` intuitively map onto the `#defines`\n"
"listed in `MicroBitConfig.h`"
msgstr ""
"Ngoài ra, các tùy chọn được cung cấp qua `config.json` ánh xạ một cách tự nhiên lên `#defines`\n"
"listed in `MicroBitConfig.h`"

#: advanced.md:284
msgid "An example of `config.json` in operation is available at the [microbit-samples](https://github.com/lancaster-university/microbit-samples) GitHub repository."
msgstr "Một ví dụ của `config.json` khi hoạt động có tại  kho GitHub [microbit-samples](https://github.com/lancaster-university/microbit-samples)."
