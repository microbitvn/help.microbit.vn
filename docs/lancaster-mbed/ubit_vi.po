#. extracted from ubit.md
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-31 11:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.10.0\n"

#: ubit.md:1
msgid "#MicroBit"
msgstr ""

#: ubit.md:3
msgid "##Overview"
msgstr ""

#: ubit.md:5
msgid ""
"Although the runtime is built from lots of small components, we also provide "
"an easy to use pre-packaged collection of the commonly used components\n"
"all in one place. This makes it much easier to start programming your "
"micro:bit in C."
msgstr ""

#: ubit.md:8
msgid ""
"This grouping is provided by a C++ class called `MicroBit`.  The `MicroBit` "
"class has a number of\n"
"member variables, that operate as device drivers to control the most "
"commonly used features of the micro:bit."
msgstr ""

#: ubit.md:11
msgid ""
"There is an instance of the `MicroBit` class created as a global variable in "
"all the sample programs, called `uBit`:"
msgstr ""

#: ubit.md:13
msgid ""
">    uBit {<br/>\n"
">    &emsp;&emsp;[.i2c](ubit/i2c.md),<br/>\n"
">    &emsp;&emsp;[.storage](ubit/storage.md),<br/>\n"
">    &emsp;&emsp;[.serial](ubit/serial.md),<br/>\n"
">    &emsp;&emsp;[.MessageBus](ubit/messageBus.md),<br/>\n"
">    &emsp;&emsp;[.buttonA](ubit/button.md),<br/>\n"
">    &emsp;&emsp;[.buttonB](ubit/button.md),<br/>\n"
">    &emsp;&emsp;[.buttonAB](ubit/button.md),<br/>\n"
">    &emsp;&emsp;[.display](ubit/display.md),<br/>\n"
">    &emsp;&emsp;[.accelerometer](ubit/accelerometer.md),<br/>\n"
">    &emsp;&emsp;[.compass](ubit/compass.md),<br/>\n"
">    &emsp;&emsp;[.thermometer](ubit/thermometer.md),<br/>\n"
">    &emsp;&emsp;[.io](ubit/io.md),<br/>\n"
">    &emsp;&emsp;[.radio](ubit/radio.md),<br/>\n"
">    }"
msgstr ""

#: ubit.md:29
msgid ""
"You can use dot operator '.' to any of these resources inside uBit to access "
"any of the functions they provide. There is a complete list of the\n"
"functions available under the `uBit` menu item in the navigation bar at the "
"top of the page."
msgstr ""

#: ubit.md:32
msgid ""
"For example, if we needed to scroll some text across the display, we simply "
"would write the following:"
msgstr ""

#: ubit.md:34
msgid ""
"```cpp\n"
"uBit.display.scroll(\"HELLO!\");\n"
"```"
msgstr ""

#: ubit.md:38
msgid ""
"Similarly, if we wanted to send some text over serial, we could write the "
"following\n"
"code:"
msgstr ""

#: ubit.md:41
msgid ""
"```cpp\n"
"for(int i = 3; i > 0; i--)\n"
"{\n"
"    uBit.serial.printf(\"%d...\", i);\n"
"    uBit.sleep(1000);\n"
"}"
msgstr ""

#: ubit.md:48
msgid ""
"// or alternatively...\n"
"uBit.serial.send(\"Code!\");\n"
"```"
msgstr ""

#: ubit.md:52
msgid ""
"The runtime also contains a scheduler, which uses lightweight threads "
"(called fibers)\n"
"to control the rate of execution."
msgstr ""

#: ubit.md:55
msgid ""
"To place the current fiber into a power efficient <a href=\"#sleep\">sleep</a> "
"write the following:"
msgstr ""

#: ubit.md:57
msgid ""
"```cpp\n"
"// where X is an integer in milliseconds for the amount of time you would "
"like to sleep for.\n"
"uBit.sleep(X);\n"
"```"
msgstr ""

#: ubit.md:62
msgid "##Message Bus ID"
msgstr ""

#: ubit.md:64
msgctxt "ubit.md:64"
msgid "> None"
msgstr ""

#: ubit.md:66
msgid "##Message Bus Events"
msgstr ""

#: ubit.md:68
msgctxt "ubit.md:68"
msgid "> None"
msgstr ""

#: ubit.md:70
msgid "#API"
msgstr ""

#: ubit.md:72
msgid "[comment]: <> ({\"className\":\"MicroBit\"})"
msgstr ""

#: ubit.md:74
msgid "##Constructor"
msgstr ""

#: ubit.md:76
msgctxt "ubit.md:76"
msgid "<br/>"
msgstr ""

#: ubit.md:78
msgid "####MicroBit()"
msgstr ""

#: ubit.md:80
msgctxt "ubit.md:80"
msgid "#####Description"
msgstr ""

#: ubit.md:82
msgid "Constructor.  "
msgstr ""

#: ubit.md:84
msgid ""
" Create a representation of a  MicroBit  device, which includes member "
"variables that represent various device drivers used to control aspects of "
"the micro:bit.           "
msgstr ""

#: ubit.md:87
msgid "##init"
msgstr ""

#: ubit.md:89
msgctxt "ubit.md:89"
msgid "<br/>"
msgstr ""

#: ubit.md:91
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>init</div>()"
msgstr ""

#: ubit.md:93
msgctxt "ubit.md:93"
msgid "#####Description"
msgstr ""

#: ubit.md:95
msgid "Post constructor initialisation method.  "
msgstr ""

#: ubit.md:97
msgid ""
" This call will initialised the scheduler, memory allocator and Bluetooth "
"stack.  "
msgstr ""

#: ubit.md:99
msgid ""
" This is required as the Bluetooth stack can't be brought up in a static "
"context i.e. in a constructor.  "
msgstr ""

#: ubit.md:106
msgctxt "ubit.md:106"
msgid "#####Example"
msgstr ""

#: ubit.md:108
msgid ""
"```cpp\n"
" uBit.init(); \n"
"```"
msgstr ""

#: ubit.md:112
msgid ""
"!!! note\n"
"    This method must be called before user code utilises any functionality "
"contained by uBit. "
msgstr ""

#: ubit.md:115
msgid "##reset"
msgstr ""

#: ubit.md:117
msgctxt "ubit.md:117"
msgid "<br/>"
msgstr ""

#: ubit.md:119
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>reset</div>()"
msgstr ""

#: ubit.md:121
msgctxt "ubit.md:121"
msgid "#####Description"
msgstr ""

#: ubit.md:123
msgid "Will reset the micro:bit when called.  "
msgstr ""

#: ubit.md:128
msgctxt "ubit.md:128"
msgid "#####Example"
msgstr ""

#: ubit.md:130
msgid ""
"```cpp\n"
" uBit.reset(); \n"
"```"
msgstr ""

#: ubit.md:134
msgid "##sleep"
msgstr ""

#: ubit.md:136
msgctxt "ubit.md:136"
msgid "<br/>"
msgstr ""

#: ubit.md:138
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>sleep</div>( <div "
"style='color:#a71d5d; display:inline-block'>uint32_t</div> milliseconds)"
msgstr ""

#: ubit.md:140
msgctxt "ubit.md:140"
msgid "#####Description"
msgstr ""

#: ubit.md:142
msgid "Delay execution for the given amount of time.  "
msgstr ""

#: ubit.md:144
msgid ""
" If the scheduler is running, this will deschedule the current fiber and "
"perform a power efficient, concurrent sleep operation.  "
msgstr ""

#: ubit.md:146
msgid ""
" If the scheduler is disabled or we're running in an interrupt context, this "
"will revert to a busy wait.  "
msgstr ""

#: ubit.md:148
msgid ""
" Alternatively: wait, wait_ms, wait_us can be used which will perform a "
"blocking sleep operation.  "
msgstr ""

#: ubit.md:155
msgctxt "ubit.md:155"
msgid "#####Parameters"
msgstr ""

#: ubit.md:157
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>uint32_t</div> "
"milliseconds - the amount of time, in ms, to wait for. This number cannot be "
"negative."
msgstr ""

#: ubit.md:159
msgctxt "ubit.md:159"
msgid "#####Returns"
msgstr ""

#: ubit.md:161
msgid ""
"MICROBIT_OK on success, MICROBIT_INVALID_PARAMETER milliseconds is less than "
"zero."
msgstr ""

#: ubit.md:163
msgctxt "ubit.md:163"
msgid "#####Example"
msgstr ""

#: ubit.md:165
msgid ""
"```cpp\n"
" uBit.sleep(20); //sleep for 20ms \n"
"```"
msgstr ""

#: ubit.md:169
msgid ""
"!!! note\n"
"    This operation is currently limited by the rate of the system timer, "
"therefore the granularity of the sleep operation is limited to 6 ms unless "
"the rate of the system timer is modified. "
msgstr ""

#: ubit.md:172
msgid "##seedRandom"
msgstr ""

#: ubit.md:174
msgctxt "ubit.md:174"
msgid "<br/>"
msgstr ""

#: ubit.md:176
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>seedRandom</div>()"
msgstr ""

#: ubit.md:178
msgctxt "ubit.md:178"
msgid "#####Description"
msgstr ""

#: ubit.md:180
msgid ""
"Seed the pseudo random number generator using the hardware random number "
"generator.  "
msgstr ""

#: ubit.md:185
msgctxt "ubit.md:185"
msgid "#####Example"
msgstr ""

#: ubit.md:187
msgid ""
"```cpp\n"
" uBit.seedRandom(); \n"
"```"
msgstr ""

#: ubit.md:191
msgctxt "ubit.md:191"
msgid "<br/>"
msgstr ""

#: ubit.md:193
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>seedRandom</div>( <div "
"style='color:#a71d5d; display:inline-block'>uint32_t</div> seed)"
msgstr ""

#: ubit.md:195
msgctxt "ubit.md:195"
msgid "#####Description"
msgstr ""

#: ubit.md:197
msgid "Seed the pseudo random number generator using the given value.  "
msgstr ""

#: ubit.md:202
msgctxt "ubit.md:202"
msgid "#####Parameters"
msgstr ""

#: ubit.md:204
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>uint32_t</div> seed - "
"The 32-bit value to seed the generator with."
msgstr ""

#: ubit.md:206
msgctxt "ubit.md:206"
msgid "#####Example"
msgstr ""

#: ubit.md:208
msgid ""
"```cpp\n"
" uBit.seedRandom(0xBB5EED); \n"
"```"
msgstr ""

#: ubit.md:212
msgid "##random"
msgstr ""

#: ubit.md:214
msgctxt "ubit.md:214"
msgid "<br/>"
msgstr ""

#: ubit.md:216
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>int</div> <div "
"style='color:#795da3; display:inline-block'>random</div>( <div "
"style='color:#a71d5d; display:inline-block'>int</div> max)"
msgstr ""

#: ubit.md:218
msgctxt "ubit.md:218"
msgid "#####Description"
msgstr ""

#: ubit.md:220
msgid ""
"Generate a random number in the given range. We use a simple Galois LFSR "
"random number generator here, as a Galois LFSR is sufficient for our "
"applications, and much more lightweight than the hardware random number "
"generator built int the processor, which takes a long time and uses a lot of "
"energy.  "
msgstr ""

#: ubit.md:222
msgid ""
" KIDS: You shouldn't use this is the real world to generate cryptographic "
"keys though... have a think why not. :-)  "
msgstr ""

#: ubit.md:227
msgctxt "ubit.md:227"
msgid "#####Parameters"
msgstr ""

#: ubit.md:229
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>int</div> max - the "
"upper range to generate a number for. This number cannot be negative."
msgstr ""

#: ubit.md:231
msgctxt "ubit.md:231"
msgid "#####Returns"
msgstr ""

#: ubit.md:233
msgid ""
"A random, natural number between 0 and the max-1. Or MICROBIT_INVALID_VALUE "
"if max is <= 0."
msgstr ""

#: ubit.md:235
msgctxt "ubit.md:235"
msgid "#####Example"
msgstr ""

#: ubit.md:237
msgid ""
"```cpp\n"
" uBit.random(200); //a number between 0 and 199 \n"
"```"
msgstr ""

#: ubit.md:241
msgid "##systemTime"
msgstr ""

#: ubit.md:243
msgctxt "ubit.md:243"
msgid "<br/>"
msgstr ""

#: ubit.md:245
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>unsigned long</div> "
"<div style='color:#795da3; display:inline-block'>systemTime</div>()"
msgstr ""

#: ubit.md:247
msgctxt "ubit.md:247"
msgid "#####Description"
msgstr ""

#: ubit.md:249
msgid "Determine the time since this  MicroBit  was last reset.  "
msgstr ""

#: ubit.md:254
msgctxt "ubit.md:254"
msgid "#####Returns"
msgstr ""

#: ubit.md:256
msgid "The time since the last reset, in milliseconds."
msgstr ""

#: ubit.md:258
msgid ""
"!!! note\n"
"    This will value overflow after 1.6 months. "
msgstr ""

#: ubit.md:261
msgid "##systemVersion"
msgstr ""

#: ubit.md:263
msgctxt "ubit.md:263"
msgid "<br/>"
msgstr ""

#: ubit.md:265
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>const char \\*</div> "
"<div style='color:#795da3; display:inline-block'>systemVersion</div>()"
msgstr ""

#: ubit.md:267
msgctxt "ubit.md:267"
msgid "#####Description"
msgstr ""

#: ubit.md:269
msgid "Determine the version of the micro:bit runtime currently in use.  "
msgstr ""

#: ubit.md:274
msgctxt "ubit.md:274"
msgid "#####Returns"
msgstr ""

#: ubit.md:276
msgid ""
"A textual description of the version of the micro:bit runtime that is "
"currently running on this device. "
msgstr ""

#: ubit.md:278
msgid "##panic"
msgstr ""

#: ubit.md:280
msgctxt "ubit.md:280"
msgid "<br/>"
msgstr ""

#: ubit.md:282
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>panic</div>()"
msgstr ""

#: ubit.md:284
msgctxt "ubit.md:284"
msgid "#####Description"
msgstr ""

#: ubit.md:286
msgctxt "ubit.md:286"
msgid ""
"Triggers a microbit panic where an loop will display a panic face and the "
"status code, if provided.  "
msgstr ""

#: ubit.md:288
msgctxt "ubit.md:288"
msgid ""
" This loop will continue for panic_timeout iterations, defaults to 0 "
"(infinite).  "
msgstr ""

#: ubit.md:290
msgctxt "ubit.md:290"
msgid ""
" panic_timeout can be configured via a call to microbit_panic_timeout.  "
msgstr ""

#: ubit.md:295
msgctxt "ubit.md:295"
msgid "#####Example"
msgstr ""

#: ubit.md:297
msgctxt "ubit.md:297"
msgid ""
"```cpp\n"
" microbit_panic_timeout(4); "
msgstr ""

#: ubit.md:300
msgctxt "ubit.md:300"
msgid ""
" // will display loop for 4 iterations. \n"
" uBit.panic(10); \n"
"```"
msgstr ""

#: ubit.md:304
msgctxt "ubit.md:304"
msgid "<br/>"
msgstr ""

#: ubit.md:306
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>void</div> <div "
"style='color:#795da3; display:inline-block'>panic</div>( <div "
"style='color:#a71d5d; display:inline-block'>int</div> statusCode)"
msgstr ""

#: ubit.md:308
msgctxt "ubit.md:308"
msgid "#####Description"
msgstr ""

#: ubit.md:310
msgctxt "ubit.md:310"
msgid ""
"Triggers a microbit panic where an loop will display a panic face and the "
"status code, if provided.  "
msgstr ""

#: ubit.md:312
msgctxt "ubit.md:312"
msgid ""
" This loop will continue for panic_timeout iterations, defaults to 0 "
"(infinite).  "
msgstr ""

#: ubit.md:314
msgctxt "ubit.md:314"
msgid ""
" panic_timeout can be configured via a call to microbit_panic_timeout.  "
msgstr ""

#: ubit.md:319
msgctxt "ubit.md:319"
msgid "#####Parameters"
msgstr ""

#: ubit.md:321
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>int</div> statusCode - "
"the status code of the associated error."
msgstr ""

#: ubit.md:323
msgctxt "ubit.md:323"
msgid "#####Example"
msgstr ""

#: ubit.md:325
msgctxt "ubit.md:325"
msgid ""
"```cpp\n"
" microbit_panic_timeout(4); "
msgstr ""

#: ubit.md:328
msgctxt "ubit.md:328"
msgid ""
" // will display loop for 4 iterations. \n"
" uBit.panic(10); \n"
"```"
msgstr ""

#: ubit.md:332
msgid "##addSystemComponent"
msgstr ""

#: ubit.md:334
msgctxt "ubit.md:334"
msgid "<br/>"
msgstr ""

#: ubit.md:336
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>int</div> <div "
"style='color:#795da3; display:inline-block'>addSystemComponent</div>( <div "
"style='color:#a71d5d; display:inline-block'>MicroBitComponent  \\*</div> "
"component)"
msgstr ""

#: ubit.md:338
msgctxt "ubit.md:338"
msgid "#####Description"
msgstr ""

#: ubit.md:340
msgid ""
"Add a component to the array of system components. This component will then "
"receive periodic callbacks, once every tick period in interrupt context.  "
msgstr ""

#: ubit.md:347
msgctxt "ubit.md:347"
msgid "#####Parameters"
msgstr ""

#: ubit.md:349
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>MicroBitComponent  "
"\\*</div> component - The component to add."
msgstr ""

#: ubit.md:351
msgctxt "ubit.md:351"
msgid "#####Returns"
msgstr ""

#: ubit.md:353
msgid ""
"MICROBIT_OK on success or MICROBIT_NO_RESOURCES if the component array is "
"full."
msgstr ""

#: ubit.md:355
msgctxt "ubit.md:355"
msgid "#####Example"
msgstr ""

#: ubit.md:357
msgctxt "ubit.md:357"
msgid ""
"```cpp\n"
" // heap allocated - otherwise it will be paged out! \n"
" MicroBitDisplay* display = new MicroBitDisplay(); "
msgstr ""

#: ubit.md:361
msgid ""
" uBit.addSystemComponent(display); \n"
"```"
msgstr ""

#: ubit.md:364
msgid ""
"!!! note\n"
"    This interface is now deprecated, and will be removed in the next major "
"release. Please use  system_timer_add_component() . "
msgstr ""

#: ubit.md:367
msgid "##removeSystemComponent"
msgstr ""

#: ubit.md:369
msgctxt "ubit.md:369"
msgid "<br/>"
msgstr ""

#: ubit.md:371
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>int</div> <div "
"style='color:#795da3; display:inline-block'>removeSystemComponent</div>( "
"<div style='color:#a71d5d; display:inline-block'>MicroBitComponent  \\*</div> "
"component)"
msgstr ""

#: ubit.md:373
msgctxt "ubit.md:373"
msgid "#####Description"
msgstr ""

#: ubit.md:375
msgid ""
"Remove a component from the array of system components. This component will "
"no longer receive periodic callbacks.  "
msgstr ""

#: ubit.md:382
msgctxt "ubit.md:382"
msgid "#####Parameters"
msgstr ""

#: ubit.md:384
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>MicroBitComponent  "
"\\*</div> component - The component to remove."
msgstr ""

#: ubit.md:386
msgctxt "ubit.md:386"
msgid "#####Returns"
msgstr ""

#: ubit.md:388
msgid ""
"MICROBIT_OK on success or MICROBIT_INVALID_PARAMETER is returned if the "
"given component has not been previously added."
msgstr ""

#: ubit.md:390
msgctxt "ubit.md:390"
msgid "#####Example"
msgstr ""

#: ubit.md:392
msgctxt "ubit.md:392"
msgid ""
"```cpp\n"
" // heap allocated - otherwise it will be paged out! \n"
" MicroBitDisplay* display = new MicroBitDisplay(); "
msgstr ""

#: ubit.md:396
msgid " uBit.addSystemComponent(display); "
msgstr ""

#: ubit.md:398
msgid ""
" uBit.removeSystemComponent(display); \n"
"```"
msgstr ""

#: ubit.md:401
msgid ""
"!!! note\n"
"    This interface is now deprecated, and will be removed in the next major "
"release. Please use  system_timer_remove_component() . "
msgstr ""

#: ubit.md:404
msgid "##addIdleComponent"
msgstr ""

#: ubit.md:406
msgctxt "ubit.md:406"
msgid "<br/>"
msgstr ""

#: ubit.md:408
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>int</div> <div "
"style='color:#795da3; display:inline-block'>addIdleComponent</div>( <div "
"style='color:#a71d5d; display:inline-block'>MicroBitComponent  \\*</div> "
"component)"
msgstr ""

#: ubit.md:410
msgctxt "ubit.md:410"
msgid "#####Description"
msgstr ""

#: ubit.md:412
msgid ""
"Adds a component to the array of idle thread components, which are processed "
"when the run queue is empty.  "
msgstr ""

#: ubit.md:414
msgid ""
" The system timer will poll isIdleCallbackNeeded on each component to "
"determine if the scheduler should schedule the idle_task imminently.  "
msgstr ""

#: ubit.md:421
msgctxt "ubit.md:421"
msgid "#####Parameters"
msgstr ""

#: ubit.md:423
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>MicroBitComponent  "
"\\*</div> component - The component to add to the array."
msgstr ""

#: ubit.md:425
msgctxt "ubit.md:425"
msgid "#####Returns"
msgstr ""

#: ubit.md:427
msgid ""
"MICROBIT_OK on success or MICROBIT_NO_RESOURCES if the fiber components "
"array is full."
msgstr ""

#: ubit.md:429
msgctxt "ubit.md:429"
msgid "#####Example"
msgstr ""

#: ubit.md:431
msgctxt "ubit.md:431"
msgid ""
"```cpp\n"
" MicroBitI2C i2c(I2C_SDA0, I2C_SCL0); "
msgstr ""

#: ubit.md:434
msgctxt "ubit.md:434"
msgid ""
" // heap allocated - otherwise it will be paged out! \n"
" MicroBitAccelerometer* accelerometer = new MicroBitAccelerometer(i2c); "
msgstr ""

#: ubit.md:437
msgid ""
" fiber_add_idle_component(accelerometer); \n"
"```"
msgstr ""

#: ubit.md:440
msgid ""
"!!! note\n"
"    This interface is now deprecated, and will be removed in the next major "
"release. Please use  fiber_add_idle_component() . "
msgstr ""

#: ubit.md:443
msgid "##removeIdleComponent"
msgstr ""

#: ubit.md:445
msgctxt "ubit.md:445"
msgid "<br/>"
msgstr ""

#: ubit.md:447
msgid ""
"####<div style='color:#a71d5d; display:inline-block'>int</div> <div "
"style='color:#795da3; display:inline-block'>removeIdleComponent</div>( <div "
"style='color:#a71d5d; display:inline-block'>MicroBitComponent  \\*</div> "
"component)"
msgstr ""

#: ubit.md:449
msgctxt "ubit.md:449"
msgid "#####Description"
msgstr ""

#: ubit.md:451
msgid "Remove a component from the array of idle thread components  "
msgstr ""

#: ubit.md:458
msgctxt "ubit.md:458"
msgid "#####Parameters"
msgstr ""

#: ubit.md:460
msgid ""
">  <div style='color:#a71d5d; display:inline-block'>MicroBitComponent  "
"\\*</div> component - The component to remove from the idle component array."
msgstr ""

#: ubit.md:462
msgctxt "ubit.md:462"
msgid "#####Returns"
msgstr ""

#: ubit.md:464
msgid ""
"MICROBIT_OK on success. MICROBIT_INVALID_PARAMETER is returned if the given "
"component has not been previously added."
msgstr ""

#: ubit.md:466
msgctxt "ubit.md:466"
msgid "#####Example"
msgstr ""

#: ubit.md:468
msgctxt "ubit.md:468"
msgid ""
"```cpp\n"
" MicroBitI2C i2c(I2C_SDA0, I2C_SCL0); "
msgstr ""

#: ubit.md:471
msgctxt "ubit.md:471"
msgid ""
" // heap allocated - otherwise it will be paged out! \n"
" MicroBitAccelerometer* accelerometer = new MicroBitAccelerometer(i2c); "
msgstr ""

#: ubit.md:474
msgid " uBit.addIdleComponent(accelerometer); "
msgstr ""

#: ubit.md:476
msgid ""
" uBit.removeIdleComponent(accelerometer); \n"
"```"
msgstr ""

#: ubit.md:479
msgid ""
"!!! note\n"
"    This interface is now deprecated, and will be removed in the next major "
"release. Please use  fiber_remove_idle_component() . "
msgstr ""

#: ubit.md:482
msgid "____"
msgstr ""

#: ubit.md:484
msgid "[comment]: <> ({\"end\":\"MicroBit\"})"
msgstr ""
